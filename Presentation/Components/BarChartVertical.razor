
<div style="display: flex; justify-content: center; height: 200px">
    @foreach (var bar in Bars) {
        var height = Math.Abs(bar.Value) / MaxHeight * 4;
        var posHeight = bar.Value > 0 ? height : 0;
        var negHeight = bar.Value < 0 ? height : 0;
        var posColor = bar.Value > 0 ? "#CCD888" : "transparent";
        var negColor = bar.Value < 0 ? "#FF576A" : "transparent";

        <div
            @onclick="@(() => OnMonthClicked?.Invoke(bar))"
            style="
                display:flex; 
                flex-direction: column; 
                height: 100%;
                cursor: pointer;
        ">   
            <div style="
                height: @((1 - posHeight) * 50)%;
                writing-mode: vertical-rl;
                text-orientation: mixed;
                white-space: nowrap;
                text-align: end;
            ">
                @Math.Round(bar.Value, 2)
            </div>
            <div style="
                width: 25px;
                background-color: @posColor;
                height: @(posHeight * 50)%;
            ">
            </div>
            <div style="
                width: 25px;
                background-color: @negColor;
                height: @(negHeight * 50)%;
                writing-mode: vertical-rl;
                text-orientation: mixed;
                white-space: nowrap;
                text-align: start;
            ">
                @bar.Text
            </div>
            <div style="
                height: @((1 - negHeight) * 50)%; 
            ">
            </div>
        </div>
    }
</div>

@code {

    [Parameter]
    public IEnumerable<Bar> Bars { get; set; } = Array.Empty<Bar>();

    [Parameter]
    public Action<Bar> OnMonthClicked { get; set; } = _ => { };

    [Parameter]
    public double MaxHeight { get; set; } 

    public struct Bar {
        public double Value { get; set; }
        public string Text { get; set; }
        public Action OnBarClicked { get; set; }
    }
    
}