@using Domain
@using System.Reflection.Metadata
@using Presentation.Store.Spending

<ContentPanel>
    <div style="display: flex; flex-direction: column; justify-content: space-between; height: 100%; margin: 5px; padding: 10px">
        <div style="font-size: larger; text-decoration: underline;" >
            @Month.ToString("MMMM") @Month.ToString("yyyy")    
        </div>

        <BarChartHorizontal
            BarValues="@MonthRows"
            MaxBarValue="@MaxMonthNet"/>

        <div style="font-size: large; font-weight: bold; text-align: right">
            <div style="display: flex; justify-content: flex-end">Spent: <div style="color: #FF576A">@Math.Round(Spent, 2)</div></div>
            <div style="display: flex; justify-content: flex-end">Income: <div style="color: #CCD888">@Math.Round(Income, 2)</div></div>
            <div style="display: flex; justify-content: flex-end">Net: <div style="color: @(Net > 0 ? "#CCD888" : "#FF576A")" >@Math.Round(Net, 2)</div></div>
        </div>
    </div>
</ContentPanel>

@code {

    [Parameter]
    public DateTime Month { get; set; }

    [Parameter]
    public double Spent { get; set; }

    [Parameter]
    public double Income { get; set; }
    
    [Parameter]
    public double Net { get; set; }

    [Parameter]
    public Action<SpendingMonthGroup> OnMonthGroupClicked { get; set; } = _ => { }; 

    [Parameter]
    public IEnumerable<SpendingMonthGroup> MonthGroups { get; set; } = Array.Empty<SpendingMonthGroup>();
    
    [Parameter]
    public double MaxMonthNet { get; set; }

    private IEnumerable<BarChartHorizontal.Bar> MonthRows =>
        MonthGroups.Select(m => {
            var costPerDay = System.Math.Round(m.Delta / DateTime.DaysInMonth(m.Month.Year, m.Month.Month), 2);
            var netCost = Math.Round(m.Delta, 2);
            var groupName = m.Group?.Name ?? "Unresolved";
            var argTransactionCount = m.TransactionCount;
            return new BarChartHorizontal.Bar(){
                Text = $"{groupName} ({netCost} in {argTransactionCount}, {costPerDay}/d)",
                Value = m.Delta,
                OnBarClicked = () => OnMonthGroupClicked?.Invoke(m)
            };
        });

}