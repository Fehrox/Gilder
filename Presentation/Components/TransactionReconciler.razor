@using Fluxor.Blazor.Web.Components
@using Fluxor
@using Domain
@using Presentation.Store.Transaction

@inherits FluxorComponent

@inject IState<TransactionState> _state
@inject IDispatcher _dispatcher

@{ var heading = GroupName + " (" + Transactions.Count() + ")";}
<TransactionTable
    Heading="@heading"
    Transactions="@Transactions"
/>    

@code {

    [Parameter]
    public string GroupName { get; set; } = String.Empty;
    
    [Parameter]
    public IEnumerable<Transaction> Transactions { get; set; } = Array.Empty<Transaction>();

    private double SumTransactionGroup(IEnumerable<Transaction> transactions) => 
        transactions.Sum(tg => tg.Charge);

    private double GetTransactionPeriod(IEnumerable<Transaction> transactions)
    {
        var orderedTransaction = transactions
            .OrderBy(t => t.Date)
            .ToArray();
        var firstTransaction = orderedTransaction.First();
        var lastTransaction = orderedTransaction.Last();
        var period = lastTransaction.Date - firstTransaction.Date;

        return period.TotalDays;
    }

}