@page "/reconcile"
@using Fluxor
@using Presentation.Store.Transaction
@using Fluxor.Blazor.Web.Components
@using Presentation.Components
@using Presentation.Store.Group
@using Transaction = Domain.Transaction

@inherits FluxorComponent

@inject IState<TransactionState> _transactionState
@inject IState<GroupState> _groupState

@{ var transactionGroups = TransactionGroups.ToArray(); }

<div style="position: fixed; left: 0">
    <div style="
        position:sticky; 
        display: flex; 
        flex-direction: row; 
        gap: 10px; 
        max-width: 935px;
    ">
        <ContentCard>
            @foreach (var group in transactionGroups) {
                var selected = _selectedGroupName == group.Key;
                <div
                    style="
                        color: @(selected ? "#E8A941" : "black"); 
                        stroke-linejoin : round;
                        stroke: black;
                        stroke-width: @(selected ? 1 : 0)px;"
                    @onclick="@(() => { _selectedGroupName = group.Key; StateHasChanged(); })"> @group.Key </div>
            }
        </ContentCard>
    </div>
</div>

<div style="display: flex; flex-direction: column; justify-content: center;">
    
    @foreach (var transactionGroup in transactionGroups) {
        if(_selectedGroupName != transactionGroup.Key) continue;
        var transactions = transactionGroup.OrderBy(t => t.Date).AsEnumerable();
        <ContentCard>
            <TransactionReconciler
                GroupName="@transactionGroup.Key"
                Transactions="@transactions" />
        </ContentCard>
    }
</div>

@code{
    
    private string _selectedGroupName = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _selectedGroupName = _groupState.Value.Groups.FirstOrDefault()?.Name ?? "Unreconciled";
    }

    private IEnumerable<IGrouping<string, Transaction>> TransactionGroups => _transactionState.Value.Transactions
        .GroupBy(g => g.Group?.Name??"Unreconciled");
}