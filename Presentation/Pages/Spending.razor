@page "/spending"

@using Fluxor
@using Fluxor.Blazor.Web.Components
@using Presentation.Components
@using Presentation.Store.Spending

@inherits FluxorComponent

@inject IDispatcher _dispatcher
@inject IState<SpendingState> _transactionState
@inject IJSRuntime _jsRuntime

<div style="display: flex; flex-direction: column; align-items: center">

    <ContentCard>
        <div style="max-width: 100%; overflow-x: auto; overflow-y: hidden; height: 300px">
            <SpendingMonthSummary 
                OnMonthClicked="@HandleMonthSummaryClicked" />
        </div>
    </ContentCard>
    
    <ContentGrid>
        @foreach (var month in InsightMonths) {
            var monthId = MontToId(month.Month);
            <section id="@monthId">
                <MonthCard 
                    Month="@month.Month"
                    Net="@month.Net"
                    Spent="@month.Spent"
                    Income="@month.Income"
                    MaxMonthNet="@MaxMonth"
                    MonthGroups="@month.GroupStats"
                    OnMonthGroupClicked="@HandleMonthGroupClicked"
                />
            </section>
        }
    </ContentGrid>
    
</div>

@if (_selectedMonthGroup != null) {
    var startOfMonth = _selectedMonthGroup.Month;
    var endOfMonth = _selectedMonthGroup.Month.AddMonths(1);
    var group = _selectedMonthGroup.Group;
    
    <TransactionsViewier 
         FilterFrom="@startOfMonth"
         FilterTo="@endOfMonth"
         FilterGroup="@group"
         OnCloseClicked="@HandleMonthCleared" />
}

@code {

    private IEnumerable<SpendingMonth> InsightMonths => _transactionState.Value.SpendingMonths
        .OrderBy(m => m.Month);

    private double MaxMonth => _transactionState.Value.MaxMonthNet;

    private SpendingMonthGroup? _selectedMonthGroup = null;

    private void HandleMonthCleared() {
        _selectedMonthGroup = null;
        StateHasChanged();
    }

    private void HandleMonthGroupClicked(SpendingMonthGroup monthGroup) {
        _selectedMonthGroup = monthGroup;
        StateHasChanged();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        _dispatcher.Dispatch(new SpendingCollateCommand());
    }

    private void HandleMonthSummaryClicked(DateTime month)
    {
        var monthId = MontToId(month);
        _jsRuntime.InvokeAsync<bool>("scrollToElement", monthId);
    }

    private string MontToId(DateTime month) => month.Year + "_" + month.Month;

}